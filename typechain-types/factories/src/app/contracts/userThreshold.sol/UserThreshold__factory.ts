/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  UserThreshold,
  UserThresholdInterface,
} from "../../../../../src/app/contracts/userThreshold.sol/UserThreshold";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tradeAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "finalTradeAmount",
        type: "uint256",
      },
    ],
    name: "FeeCalculated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "collector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FeeCollected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "hederaAccountId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "orderType",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "currentPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "OrderExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int64",
        name: "result",
        type: "int64",
      },
    ],
    name: "RouterApprovalResult",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "hederaAccountId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cap",
        type: "uint256",
      },
    ],
    name: "ThresholdSet",
    type: "event",
  },
  {
    inputs: [],
    name: "FEE_BASIS_POINTS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approveRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "calculateFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "currentPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "hederaAccountId",
        type: "string",
      },
    ],
    name: "deactivateThresholds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "hederaAccountId",
        type: "string",
      },
      {
        internalType: "string",
        name: "orderType",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "path",
        type: "bytes",
      },
    ],
    name: "executeTradeForUser",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCollector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "hederaAccountId",
        type: "string",
      },
    ],
    name: "getThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "storedHederaId",
        type: "string",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "cap",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newCollector",
        type: "address",
      },
    ],
    name: "setFeeCollector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_hederaAccountId",
        type: "string",
      },
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_cap",
        type: "uint256",
      },
    ],
    name: "setThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "userThresholds",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "hederaAccountId",
        type: "string",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "cap",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051611c29380380611c2983398101604081905261002f9161005e565b600080546001600160a01b039092166001600160a01b031992831681179091556002805490921617905561008e565b60006020828403121561007057600080fd5b81516001600160a01b038116811461008757600080fd5b9392505050565b611b8c8061009d6000396000f3fe6080604052600436106100a75760003560e01c806399a5d7471161006457806399a5d747146101a15780639d1b464a146101cf578063a42dce80146101e5578063a525ad3c14610205578063c415b95c1461021a578063d3c0eac31461023a57600080fd5b806312bf2490146100ac578063552f9a8f146100ce5780636cc3eb68146100ee57806388a95e61146101295780638da5cb5b146101495780639286eddb14610181575b600080fd5b3480156100b857600080fd5b506100cc6100c736600461136f565b61024d565b005b3480156100da57600080fd5b506100cc6100e93660046113df565b610500565b3480156100fa57600080fd5b5061010e6101093660046113df565b6105aa565b6040516101209695949392919061146c565b60405180910390f35b34801561013557600080fd5b506100cc6101443660046114b5565b6106f2565b34801561015557600080fd5b50600054610169906001600160a01b031681565b6040516001600160a01b039091168152602001610120565b34801561018d57600080fd5b5061010e61019c3660046113df565b6107ca565b3480156101ad57600080fd5b506101c16101bc3660046114df565b6108a4565b604051908152602001610120565b3480156101db57600080fd5b506101c160015481565b3480156101f157600080fd5b506100cc6102003660046114f8565b6108c4565b34801561021157600080fd5b506101c1600881565b34801561022657600080fd5b50600254610169906001600160a01b031681565b6100cc610248366004611513565b6109a0565b60008511801561025f57506127108511155b6102c75760405162461bcd60e51b815260206004820152602e60248201527f5072696365206d757374206265206265747765656e203120616e64203130303060448201526d3020626173697320706f696e747360901b60648201526084015b60405180910390fd5b600081116103175760405162461bcd60e51b815260206004820152601d60248201527f436170206d7573742062652067726561746572207468616e207a65726f00000060448201526064016102be565b6001600160a01b0383161580159061033757506001600160a01b03821615155b6103835760405162461bcd60e51b815260206004820152601d60248201527f546f6b656e20616464726573736573206d7573742062652076616c696400000060448201526064016102be565b60008451116103e05760405162461bcd60e51b815260206004820152602360248201527f486564657261206163636f756e74204944206d757374206e6f7420626520656d60448201526270747960e81b60648201526084016102be565b6040518060c00160405280868152602001858152602001846001600160a01b03168152602001836001600160a01b031681526020018281526020016001151581525060038560405161043291906115af565b90815260405160209181900382019020825181559082015160018201906104599082611653565b506040828101516002830180546001600160a01b039283166001600160a01b03199182161790915560608501516003850180549190931691161790556080830151600483015560a0909201516005909101805491151560ff19909216919091179055517f4e0a4623681cb3c80c8dee5726478ce667f0bc0bbe2687ce069c9403c8a77c30906104f19086908890879087908790611713565b60405180910390a15050505050565b60038160405161051091906115af565b9081526040519081900360200190206005015460ff166105725760405162461bcd60e51b815260206004820152601a60248201527f4e6f20616374697665207468726573686f6c647320666f756e6400000000000060448201526064016102be565b600060038260405161058491906115af565b908152604051908190036020019020600501805491151560ff1990921691909117905550565b6000606060008060008060006003886040516105c691906115af565b90815260200160405180910390206040518060c0016040529081600082015481526020016001820180546105f9906115cb565b80601f0160208091040260200160405190810160405280929190818152602001828054610625906115cb565b80156106725780601f1061064757610100808354040283529160200191610672565b820191906000526020600020905b81548152906001019060200180831161065557829003601f168201915b505050918352505060028201546001600160a01b039081166020808401919091526003840154909116604080840191909152600484015460608085019190915260059094015460ff16151560809384015284519185015190850151938501519285015160a090950151919d909c50929a5090985091965090945092505050565b604051630813481f60e21b81526001600160a01b0383166004820152306024820152621593986044820152606481018290526000906101679063204d207c906084016020604051808303816000875af1158015610753573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107779190611751565b90508060070b6000146107c55760405162461bcd60e51b8152602060048201526016602482015275149bdd5d195c88185c1c1c9bdd985b0819985a5b195960521b60448201526064016102be565b505050565b8051602081830181018051600382529282019190930120915280546001820180549192916107f7906115cb565b80601f0160208091040260200160405190810160405280929190818152602001828054610823906115cb565b80156108705780601f1061084557610100808354040283529160200191610870565b820191906000526020600020905b81548152906001019060200180831161085357829003601f168201915b5050505060028301546003840154600485015460059095015493946001600160a01b03928316949290911692509060ff1686565b60006127106108b460088461178a565b6108be91906117a1565b92915050565b6000546001600160a01b031633146109285760405162461bcd60e51b815260206004820152602160248201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6044820152603760f91b60648201526084016102be565b6001600160a01b03811661097e5760405162461bcd60e51b815260206004820152601d60248201527f496e76616c69642066656520636f6c6c6563746f72206164647265737300000060448201526064016102be565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60006003846040516109b291906115af565b908152604051908190036020019020600581015490915060ff16610a185760405162461bcd60e51b815260206004820152601e60248201527f55736572207468726573686f6c647320617265206e6f7420616374697665000060448201526064016102be565b6000610a2334610aa4565b90506000610a32868386610be5565b60058401805460ff19169055600154600285015460038601546040519394507f21c7121ef4dbd603e0d944e859a47be2a20d7b28ff6cb023bef13ee3c2f0323193610a94938b938b9391926001600160a01b03918216929091169088906117c3565b60405180910390a1505050505050565b600080610ab0836108a4565b90506000610abe8285611815565b60408051868152602081018590529081018290529091507f7a48c33736cc83551ed4caa7a29779e7cc364880bde674452fc7be480daa03639060600160405180910390a16002546040516000916001600160a01b03169084908381818185875af1925050503d8060008114610b4f576040519150601f19603f3d011682016040523d82523d6000602084013e610b54565b606091505b5050905080610b9b5760405162461bcd60e51b8152602060048201526013602482015272119959481d1c985b9cd9995c8819985a5b1959606a1b60448201526064016102be565b6002546040518481526001600160a01b03909116907f06c5efeff5c320943d265dc4e5f1af95ad523555ce0c1957e367dda5514572df9060200160405180910390a2509392505050565b60006215939881610bf586610e81565b905060006040518060a00160405280868152602001836001600160a01b0316815260200142603c610c269190611828565b8152602081018890526000604091820181905281516002808252606082019093529293509190816020015b6060815260200190600190039081610c5157505060405190915063c04b8d5960e01b90610c8290849060240161183b565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b03838183161783525050505081600081518110610cc857610cc8611893565b60209081029190910181019190915260408051600481526024810190915290810180516001600160e01b0316630910874560e11b179052815182906001908110610d1457610d14611893565b60200260200101819052506000846001600160a01b031663ac9650d889846040518363ffffffff1660e01b8152600401610d4e91906118a9565b60006040518083038185885af193505050508015610d8e57506040513d6000823e601f3d908101601f19168201604052610d8b919081019061190b565b60015b610e4557610d9a611a16565b806308c379a003610df05750610dae611a32565b80610db95750610df2565b80604051602001610dca9190611abc565b60408051601f198184030181529082905262461bcd60e51b82526102be91600401611af8565b505b60405162461bcd60e51b815260206004820152602260248201527f526f757465722063616c6c206661696c65643a20756e6b6e6f776e207265617360448201526137b760f11b60648201526084016102be565b80600081518110610e5857610e58611893565b6020026020010151806020019051810190610e739190611b0b565b9a9950505050505050505050565b600080610ea783604051806040016040528060018152602001601760f91b815250610f6d565b90508051600314610efa5760405162461bcd60e51b815260206004820181905260248201527f496e76616c696420486564657261206163636f756e7420494420666f726d617460448201526064016102be565b6000610f1f82600081518110610f1257610f12611893565b6020026020010151611126565b90506000610f3983600181518110610f1257610f12611893565b90506000610f5384600281518110610f1257610f12611893565b905080602083901b602885901b1717945050505050919050565b606082600160005b8251811015610fec5784600081518110610f9157610f91611893565b602001015160f81c60f81b6001600160f81b031916838281518110610fb857610fb8611893565b01602001516001600160f81b03191603610fda5781610fd681611b24565b9250505b80610fe481611b24565b915050610f75565b5060008167ffffffffffffffff8111156110085761100861127b565b60405190808252806020026020018201604052801561103b57816020015b60608152602001906001900390816110265790505b50905060008060005b85518110156110f0578760008151811061106057611060611893565b602001015160f81c60f81b6001600160f81b03191686828151811061108757611087611893565b01602001516001600160f81b031916036110de576110a68984836111ae565b8483815181106110b8576110b8611893565b60209081029190910101526110ce816001611828565b9250816110da81611b24565b9250505b806110e881611b24565b915050611044565b506110fd888387516111ae565b83828151811061110f5761110f611893565b602090810291909101015250909695505050505050565b60008181805b82518110156111a657600083828151811061114957611149611893565b016020015160f81c905060308110801590611168575060398160ff1611155b1561119357611178603082611b3d565b60ff1661118684600a61178a565b6111909190611828565b92505b508061119e81611b24565b91505061112c565b509392505050565b60608360006111bd8585611815565b67ffffffffffffffff8111156111d5576111d561127b565b6040519080825280601f01601f1916602001820160405280156111ff576020820181803683370190505b509050845b848110156112715782818151811061121e5761121e611893565b01602001516001600160f81b031916826112388884611815565b8151811061124857611248611893565b60200101906001600160f81b031916908160001a9053508061126981611b24565b915050611204565b5095945050505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156112b7576112b761127b565b6040525050565b600067ffffffffffffffff8211156112d8576112d861127b565b50601f01601f191660200190565b60006112f1836112be565b6040516112fe8282611291565b80925084815285858501111561131357600080fd5b8484602083013760006020868301015250509392505050565b600082601f83011261133d57600080fd5b61134c838335602085016112e6565b9392505050565b80356001600160a01b038116811461136a57600080fd5b919050565b600080600080600060a0868803121561138757600080fd5b85359450602086013567ffffffffffffffff8111156113a557600080fd5b6113b18882890161132c565b9450506113c060408701611353565b92506113ce60608701611353565b949793965091946080013592915050565b6000602082840312156113f157600080fd5b813567ffffffffffffffff81111561140857600080fd5b6114148482850161132c565b949350505050565b60005b8381101561143757818101518382015260200161141f565b50506000910152565b6000815180845261145881602086016020860161141c565b601f01601f19169290920160200192915050565b86815260c06020820152600061148560c0830188611440565b6001600160a01b0396871660408401529490951660608201526080810192909252151560a0909101529392505050565b600080604083850312156114c857600080fd5b6114d183611353565b946020939093013593505050565b6000602082840312156114f157600080fd5b5035919050565b60006020828403121561150a57600080fd5b61134c82611353565b60008060006060848603121561152857600080fd5b833567ffffffffffffffff8082111561154057600080fd5b61154c8783880161132c565b9450602086013591508082111561156257600080fd5b61156e8783880161132c565b9350604086013591508082111561158457600080fd5b508401601f8101861361159657600080fd5b6115a5868235602084016112e6565b9150509250925092565b600082516115c181846020870161141c565b9190910192915050565b600181811c908216806115df57607f821691505b6020821081036115ff57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156107c557600081815260208120601f850160051c8101602086101561162c5750805b601f850160051c820191505b8181101561164b57828155600101611638565b505050505050565b815167ffffffffffffffff81111561166d5761166d61127b565b6116818161167b84546115cb565b84611605565b602080601f8311600181146116b6576000841561169e5750858301515b600019600386901b1c1916600185901b17855561164b565b600085815260208120601f198616915b828110156116e5578886015182559484019460019091019084016116c6565b50858210156117035787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60a08152600061172660a0830188611440565b6020830196909652506001600160a01b03938416604082015291909216606082015260800152919050565b60006020828403121561176357600080fd5b81518060070b811461134c57600080fd5b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176108be576108be611774565b6000826117be57634e487b7160e01b600052601260045260246000fd5b500490565b60c0815260006117d660c0830189611440565b82810360208401526117e88189611440565b604084019790975250506001600160a01b03938416606082015291909216608082015260a0015292915050565b818103818111156108be576108be611774565b808201808211156108be576108be611774565b602081526000825160a0602084015261185760c0840182611440565b905060018060a01b0360208501511660408401526040840151606084015260608401516080840152608084015160a08401528091505092915050565b634e487b7160e01b600052603260045260246000fd5b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156118fe57603f198886030184526118ec858351611440565b945092850192908501906001016118d0565b5092979650505050505050565b6000602080838503121561191e57600080fd5b825167ffffffffffffffff8082111561193657600080fd5b818501915085601f83011261194a57600080fd5b81518181111561195c5761195c61127b565b8060051b6040805161197087840182611291565b9283528482018601928681018a85111561198957600080fd5b87870193505b84841015611a08578351868111156119a75760008081fd5b8701603f81018c136119b95760008081fd5b888101516119c6816112be565b85516119d28282611291565b8281528e878486010111156119e957600091508182fd5b6119f8838d830189870161141c565b845250505092870192870161198f565b509998505050505050505050565b600060033d1115611a2f5760046000803e5060005160e01c5b90565b600060443d1015611a405790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611a7057505050505090565b8285019150815181811115611a885750505050505090565b843d8701016020828501011115611aa25750505050505090565b611ab160208286010187611291565b509095945050505050565b7302937baba32b91031b0b636103330b4b632b21d160651b815260008251611aeb81601485016020870161141c565b9190910160140192915050565b60208152600061134c6020830184611440565b600060208284031215611b1d57600080fd5b5051919050565b600060018201611b3657611b36611774565b5060010190565b60ff82811682821603908111156108be576108be61177456fea2646970667358221220fd037c6db894f432fe061d46d6475f7210851bb35d670e585dceba1659f3a96664736f6c63430008140033";

type UserThresholdConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UserThresholdConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UserThreshold__factory extends ContractFactory {
  constructor(...args: UserThresholdConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override deploy(
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_owner, overrides || {}) as Promise<
      UserThreshold & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): UserThreshold__factory {
    return super.connect(runner) as UserThreshold__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UserThresholdInterface {
    return new Interface(_abi) as UserThresholdInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): UserThreshold {
    return new Contract(address, _abi, runner) as unknown as UserThreshold;
  }
}
