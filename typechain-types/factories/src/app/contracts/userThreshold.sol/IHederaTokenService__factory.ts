/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IHederaTokenService,
  IHederaTokenServiceInterface,
} from "../../../../../src/app/contracts/userThreshold.sol/IHederaTokenService";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approveTokenAllowance",
    outputs: [
      {
        internalType: "int64",
        name: "",
        type: "int64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IHederaTokenService__factory {
  static readonly abi = _abi;
  static createInterface(): IHederaTokenServiceInterface {
    return new Interface(_abi) as IHederaTokenServiceInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IHederaTokenService {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IHederaTokenService;
  }
}
