/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  MockHederaTokenService,
  MockHederaTokenServiceInterface,
} from "../../../../src/app/contracts/MockHederaTokenService";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
    ],
    name: "InsufficientTokenAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "NoSupplyKeyPermission",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "TokenAssociated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokenBurned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "treasury",
        type: "address",
      },
    ],
    name: "TokenCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokenMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokenTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "associateToken",
    outputs: [
      {
        internalType: "int64",
        name: "",
        type: "int64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes[]",
        name: "",
        type: "bytes[]",
      },
    ],
    name: "burnToken",
    outputs: [
      {
        internalType: "int64",
        name: "",
        type: "int64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "address",
            name: "treasury",
            type: "address",
          },
          {
            internalType: "string",
            name: "memo",
            type: "string",
          },
          {
            internalType: "bool",
            name: "supplyType",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "maxSupply",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "freezeDefault",
            type: "bool",
          },
          {
            internalType: "address[]",
            name: "freezeKey",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "wipeKey",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "supplyKey",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "adminKey",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "kycKey",
            type: "address[]",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
        ],
        internalType: "struct IHederaTokenService.HederaToken",
        name: "token",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "initialTotalSupply",
        type: "uint256",
      },
      {
        internalType: "uint8[]",
        name: "keys",
        type: "uint8[]",
      },
      {
        internalType: "address[]",
        name: "keyAddresses",
        type: "address[]",
      },
    ],
    name: "createToken",
    outputs: [
      {
        internalType: "int64",
        name: "responseCode",
        type: "int64",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getMockHtsPrecompile",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getSupplyKeyHolder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "supplyAddress",
        type: "address",
      },
    ],
    name: "isSupplyKey",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "isTokenAssociated",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes[]",
        name: "",
        type: "bytes[]",
      },
    ],
    name: "mintToken",
    outputs: [
      {
        internalType: "int64",
        name: "",
        type: "int64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int64",
        name: "responseCode",
        type: "int64",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "mockCreateTokenResponse",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "supplyAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    name: "mockIsSupplyKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setMintingEnabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mockHtsPrecompile",
        type: "address",
      },
    ],
    name: "setMockHtsPrecompile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "skip",
        type: "bool",
      },
    ],
    name: "setSkipAllowanceChecks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "supplyKeyHolder",
        type: "address",
      },
    ],
    name: "setSupplyKeyHolder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "associated",
        type: "bool",
      },
    ],
    name: "setTokenAssociated",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferToken",
    outputs: [
      {
        internalType: "int64",
        name: "",
        type: "int64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526008805460ff1916905534801561001a57600080fd5b507fa15bc60c955c405d20d9149c709e2460f1c2d9a497496a7f46004d1772c3054c805460ff1990811660019081179092557fc3a24b0501bd2c13a7e57f2db4369ec4c223447539fc0724a9d55ac4a06ebd4d80548216831790557fcbc4e5fb02c3d1de23a9f1e014b4d2ee5aeaea9505df5e855c9210bf472495af8054909116909117905560046020527fabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe0580546001600160a01b03199081169091557f91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a780548216905560036000527f2e174c10e159ea99b867ce3205125c24a42d128804e4070ed6fcc8cc98166aa0805490911690556118848061013a6000396000f3fe6080604052600436106101235760003560e01c8063725fe8a4116100a0578063b5c9cbbe11610064578063b5c9cbbe1461050a578063cc2456b71461054f578063ec12dc02146105a4578063f3fc76fa146105c4578063f7888aec146105e457600080fd5b8063725fe8a414610375578063927da105146103be578063a70703731461041c578063a7796a901461046c578063ac9e6d7a146104c157600080fd5b806349146bde116100e757806349146bde146102535780634b8555a3146102735780634d2c5311146102ac5780635c34c68a1461031757806369bf64d11461034757600080fd5b806301b620ca1461012f57806303bd8900146101695780631abb194a146101a857806324a94e01146101ee5780632c54de4f1461022057600080fd5b3661012a57005b600080fd5b61014261013d36600461125d565b610628565b6040805160079390930b83526001600160a01b039091166020830152015b60405180910390f35b34801561017557600080fd5b506101a6610184366004611478565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b005b3480156101b457600080fd5b506101a66101c3366004611493565b6001600160a01b03919091166000908152600360205260409020805460ff1916911515919091179055565b3480156101fa57600080fd5b506005546001600160a01b03165b6040516001600160a01b039091168152602001610160565b34801561022c57600080fd5b5061024061023b3660046114c6565b6109b5565b60405160079190910b8152602001610160565b34801561025f57600080fd5b5061024061026e366004611511565b610cc2565b34801561027f57600080fd5b5061020861028e366004611478565b6001600160a01b039081166000908152600460205260409020541690565b3480156102b857600080fd5b506101a66102c736600461153b565b6005805467ffffffffffffffff909316600160a01b0267ffffffffffffffff60a01b1990931692909217909155600680546001600160a01b039092166001600160a01b0319909216919091179055565b34801561032357600080fd5b50610337610332366004611511565b610d2a565b6040519015158152602001610160565b34801561035357600080fd5b506101a661036236600461155f565b6008805460ff1916911515919091179055565b34801561038157600080fd5b50610337610390366004611511565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b3480156103ca57600080fd5b5061040e6103d936600461157a565b6001600160a01b0392831660009081526001602090815260408083209486168352938152838220929094168152925290205490565b604051908152602001610160565b34801561042857600080fd5b506101a66104373660046114c6565b6001600160a01b0393841660009081526001602090815260408083209587168352948152848220939095168152919093522055565b34801561047857600080fd5b506101a66104873660046115bd565b6001600160a01b03928316600090815260026020908152604080832094909516825292909252919020805460ff1916911515919091179055565b3480156104cd57600080fd5b506101a66104dc366004611511565b6001600160a01b03918216600090815260046020526040902080546001600160a01b03191691909216179055565b34801561051657600080fd5b506101a66105253660046115f7565b6001600160a01b039283166000908152602081815260408083209490951682529290925291902055565b34801561055b57600080fd5b506101a661056a3660046115bd565b6001600160a01b03928316600090815260076020908152604080832094909516825292909252919020805460ff1916911515919091179055565b3480156105b057600080fd5b506102406105bf366004611633565b610d89565b3480156105d057600080fd5b506102406105df366004611633565b610ede565b3480156105f057600080fd5b5061040e6105ff366004611511565b6001600160a01b0391821660009081526020818152604080832093909416825291909152205490565b60065460009081906001600160a01b0316156107f857505060068054600580546001600160a01b0319831690935567ffffffffffffffff60a01b19831690556001600160a01b03166000818152600360205260409020805460ff19166001179055600160a01b90910460070b9084156106c6576001600160a01b038082166000908152602081815260408083208a8201519094168352929052208590555b6040808701516001600160a01b03908116600090815260026020908152838220928516825291909152908120805460ff191660011790555b84518110156107a15784818151811061071957610719611716565b602002602001015160ff1660040361078f5783818151811061073d5761073d611716565b602002602001015160046000846001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b8061079981611742565b9150506106fe565b50806001600160a01b03167f6596c1670eb3390048d23721809c3da5d3f531375ac0e2cab0f77a808ed643318760000151886020015189604001516040516107eb939291906117ab565b60405180910390a26109ac565b855160405161080e9142913391906020016117e9565b60408051601f1981840301815291815281516020928301206001600160a01b038116600090815260039093529120805460ff191660011790559050841561087a576001600160a01b038082166000908152602081815260408083208a8201519094168352929052208590555b6040808701516001600160a01b03908116600090815260026020908152838220928516825291909152908120805460ff191660011790555b8451811015610955578481815181106108cd576108cd611716565b602002602001015160ff16600403610943578381815181106108f1576108f1611716565b602002602001015160046000846001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b8061094d81611742565b9150506108b2565b50806001600160a01b03167f6596c1670eb3390048d23721809c3da5d3f531375ac0e2cab0f77a808ed6433187600001518860200151896040015160405161099f939291906117ab565b60405180910390a2600091505b94509492505050565b6001600160a01b03808416600090815260026020908152604080832093881683529290529081205460ff16610a315760405162461bcd60e51b815260206004820181905260248201527f546f6b656e206e6f74206173736f63696174656420776974682073656e64657260448201526064015b60405180910390fd5b6001600160a01b0380841660009081526002602090815260408083209389168352929052205460ff16610ab15760405162461bcd60e51b815260206004820152602260248201527f546f6b656e206e6f74206173736f63696174656420776974682072656365697660448201526132b960f11b6064820152608401610a28565b6001600160a01b0380861660009081526020818152604080832093881683529290522054821115610b1b5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610a28565b6001600160a01b0384163314801590610b37575060085460ff16155b15610bea576001600160a01b03808616600090815260016020908152604080832093881683529281528282203383529052205482811015610ba457604051632909934d60e21b81526001600160a01b03871660048201526024810182905260448101849052606401610a28565b6001600160a01b038087166000908152600160209081526040808320938916835292815282822033835290529081208054859290610be3908490611828565b9091555050505b6001600160a01b0380861660009081526020818152604080832093881683529290529081208054849290610c1f908490611828565b90915550506001600160a01b0380861660009081526020818152604080832093871683529290529081208054849290610c5990849061183b565b92505081905550826001600160a01b0316846001600160a01b0316866001600160a01b03167f9af266b6ca4909f988dc948fb50ad15153abbe525351881bad4fa858be96515c85604051610caf91815260200190565b60405180910390a4506000949350505050565b6001600160a01b03808316600081815260026020908152604080832094861680845294909152808220805460ff1916600117905551909291907f6ba8f0debf54740777149db87bd08717b4dbdcb36073d53cdc784019dafac16f908490a35060005b92915050565b6001600160a01b03808316600090815260076020908152604080832093851683529290529081205460ff168015610d65576001915050610d24565b50506001600160a01b03918216600090815260046020526040902054821691161490565b6001600160a01b03831660009081526003602052604081205460ff16610dfc5760405162461bcd60e51b815260206004820152602260248201527f4d696e74696e67206e6f7420656e61626c656420666f72207468697320746f6b60448201526132b760f11b6064820152608401610a28565b6001600160a01b03808516600090815260046020526040902054168015801590610e2f5750336001600160a01b03821614155b15610e5e57604051630d27cbf560e11b81526001600160a01b0386166004820152336024820152604401610a28565b6001600160a01b03851660009081526020818152604080832033845290915281208054869290610e8f90849061183b565b90915550506040518481526001600160a01b038616907fb9144c96c86541f6fa89c9f2f02495cccf4b08cd6643e26d34ee00aa586558a8906020015b60405180910390a2506000949350505050565b6001600160a01b038084166000908152600460205260408120549091168015801590610f135750336001600160a01b03821614155b15610f4257604051630d27cbf560e11b81526001600160a01b0386166004820152336024820152604401610a28565b6001600160a01b038516600090815260208181526040808320338452909152902054841115610fb35760405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e742062616c616e636520746f206275726e000000006044820152606401610a28565b6001600160a01b03851660009081526020818152604080832033845290915281208054869290610fe4908490611828565b90915550506040518481526001600160a01b038616907f1af5163f80e79b5e554f61e1d052084d3a3fe1166e42a265798c4e2ddce8ffa290602001610ecb565b634e487b7160e01b600052604160045260246000fd5b6040516101a0810167ffffffffffffffff8111828210171561105e5761105e611024565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561108d5761108d611024565b604052919050565b600067ffffffffffffffff8311156110af576110af611024565b6110c2601f8401601f1916602001611064565b90508281528383830111156110d657600080fd5b828260208301376000602084830101529392505050565b600082601f8301126110fe57600080fd5b61110d83833560208501611095565b9392505050565b80356001600160a01b038116811461112b57600080fd5b919050565b8035801515811461112b57600080fd5b803563ffffffff8116811461112b57600080fd5b600067ffffffffffffffff82111561116e5761116e611024565b5060051b60200190565b600082601f83011261118957600080fd5b8135602061119e61119983611154565b611064565b82815260059290921b840181019181810190868411156111bd57600080fd5b8286015b848110156111df576111d281611114565b83529183019183016111c1565b509695505050505050565b803560ff8116811461112b57600080fd5b600082601f83011261120c57600080fd5b8135602061121c61119983611154565b82815260059290921b8401810191818101908684111561123b57600080fd5b8286015b848110156111df57611250816111ea565b835291830191830161123f565b6000806000806080858703121561127357600080fd5b843567ffffffffffffffff8082111561128b57600080fd5b908601906101a082890312156112a057600080fd5b6112a861103a565b8235828111156112b757600080fd5b6112c38a8286016110ed565b8252506020830135828111156112d857600080fd5b6112e48a8286016110ed565b6020830152506112f660408401611114565b604082015260608301358281111561130d57600080fd5b6113198a8286016110ed565b60608301525061132b60808401611130565b608082015261133c60a08401611140565b60a082015261134d60c08401611130565b60c082015260e08301358281111561136457600080fd5b6113708a828601611178565b60e083015250610100808401358381111561138a57600080fd5b6113968b828701611178565b82840152505061012080840135838111156113b057600080fd5b6113bc8b828701611178565b82840152505061014080840135838111156113d657600080fd5b6113e28b828701611178565b82840152505061016080840135838111156113fc57600080fd5b6114088b828701611178565b82840152505061018061141c8185016111ea565b90820152955060208701359450604087013591508082111561143d57600080fd5b611449888389016111fb565b9350606087013591508082111561145f57600080fd5b5061146c87828801611178565b91505092959194509250565b60006020828403121561148a57600080fd5b61110d82611114565b600080604083850312156114a657600080fd5b6114af83611114565b91506114bd60208401611130565b90509250929050565b600080600080608085870312156114dc57600080fd5b6114e585611114565b93506114f360208601611114565b925061150160408601611114565b9396929550929360600135925050565b6000806040838503121561152457600080fd5b61152d83611114565b91506114bd60208401611114565b6000806040838503121561154e57600080fd5b82358060070b811461152d57600080fd5b60006020828403121561157157600080fd5b61110d82611130565b60008060006060848603121561158f57600080fd5b61159884611114565b92506115a660208501611114565b91506115b460408501611114565b90509250925092565b6000806000606084860312156115d257600080fd5b6115db84611114565b92506115e960208501611114565b91506115b460408501611130565b60008060006060848603121561160c57600080fd5b61161584611114565b925061162360208501611114565b9150604084013590509250925092565b60008060006060848603121561164857600080fd5b61165184611114565b9250602080850135925060408086013567ffffffffffffffff8082111561167757600080fd5b818801915088601f83011261168b57600080fd5b813561169961119982611154565b81815260059190911b8301850190858101908b8311156116b857600080fd5b8685015b83811015611704578035858111156116d45760008081fd5b8601603f81018e136116e65760008081fd5b6116f68e8a8301358a8401611095565b8452509187019187016116bc565b50809750505050505050509250925092565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016117545761175461172c565b5060010190565b60005b8381101561177657818101518382015260200161175e565b50506000910152565b6000815180845261179781602086016020860161175b565b601f01601f19169290920160200192915050565b6060815260006117be606083018661177f565b82810360208401526117d0818661177f565b91505060018060a01b0383166040830152949350505050565b8381526bffffffffffffffffffffffff198360601b1660208201526000825161181981603485016020870161175b565b91909101603401949350505050565b81810381811115610d2457610d2461172c565b80820180821115610d2457610d2461172c56fea2646970667358221220fc35200804806faf44be1cdd1252b100facce50076b64cfb89ec0134a2ac10f364736f6c63430008140033";

type MockHederaTokenServiceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockHederaTokenServiceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockHederaTokenService__factory extends ContractFactory {
  constructor(...args: MockHederaTokenServiceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockHederaTokenService & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): MockHederaTokenService__factory {
    return super.connect(runner) as MockHederaTokenService__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockHederaTokenServiceInterface {
    return new Interface(_abi) as MockHederaTokenServiceInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockHederaTokenService {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as MockHederaTokenService;
  }
}
