/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  NFTSale,
  NFTSaleInterface,
} from "../../../../src/app/contracts/NFTSale";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ContractReset",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "serialNumber",
        type: "uint256",
      },
    ],
    name: "NFTSold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentForwarded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "PriceUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "PRICE_INCREMENT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
    ],
    name: "batchGiveawayNFTs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "getPurchaseState",
    outputs: [
      {
        internalType: "bool",
        name: "purchased",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "nextToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentPrice",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "giveawayNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasPurchased",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "purchaseNFT",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "resetContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "soldSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526402540be40060035560646004555f6005556001600655348015610026575f80fd5b50604051610cbc380380610cbc8339810160408190526100459161009b565b5f80546001600160a01b03199081163317909155600280546001600160a01b03948516908316179055600180549290931691161790556100cc565b80516001600160a01b0381168114610096575f80fd5b919050565b5f80604083850312156100ac575f80fd5b6100b583610080565b91506100c360208401610080565b90509250929050565b610be3806100d95f395ff3fe6080604052600436106100e3575f3560e01c806390118fb411610087578063d5abeb0111610057578063d5abeb011461026b578063e10577a814610280578063eb91d37e1461029f578063fa2299ee146102b3575f80fd5b806390118fb4146101e55780639d76ea5814610223578063a035b1fe14610242578063b181a8fc14610257575f80fd5b806361d027b3116100c257806361d027b3146101385780636b9581251461016f5780636d25d802146101b05780638da5cb5b146101c7575f80fd5b80629a9b7b146100e75780633548bfb51461010f578063613b4d3214610130575b5f80fd5b3480156100f2575f80fd5b506100fc60065481565b6040519081526020015b60405180910390f35b34801561011a575f80fd5b5061012e610129366004610aa5565b6102c8565b005b61012e610520565b348015610143575f80fd5b50600154610157906001600160a01b031681565b6040516001600160a01b039091168152602001610106565b34801561017a575f80fd5b5061018e610189366004610b14565b610790565b6040805194151585526020850193909352918301526060820152608001610106565b3480156101bb575f80fd5b506100fc633b9aca0081565b3480156101d2575f80fd5b505f54610157906001600160a01b031681565b3480156101f0575f80fd5b506102136101ff366004610b14565b60076020525f908152604090205460ff1681565b6040519015158152602001610106565b34801561022e575f80fd5b50600254610157906001600160a01b031681565b34801561024d575f80fd5b506100fc60035481565b348015610262575f80fd5b5061012e6107da565b348015610276575f80fd5b506100fc60045481565b34801561028b575f80fd5b5061012e61029a366004610b14565b610873565b3480156102aa575f80fd5b506003546100fc565b3480156102be575f80fd5b506100fc60055481565b5f546001600160a01b031633146103265760405162461bcd60e51b815260206004820152601d60248201527f4f6e6c79206f776e65722063616e20676976652061776179204e46547300000060448201526064015b60405180910390fd5b600454600554610337908390610b55565b11156103855760405162461bcd60e51b815260206004820152601960248201527f4e6f7420656e6f756768204e4654732072656d61696e696e6700000000000000604482015260640161031d565b5f5b8181101561051b5760075f8484848181106103a4576103a4610b6e565b90506020020160208101906103b99190610b14565b6001600160a01b0316815260208101919091526040015f205460ff16156104225760405162461bcd60e51b815260206004820152601f60248201527f4164647265737320616c726561647920726563656976656420616e204e465400604482015260640161031d565b600680549081905f61043383610b82565b909155505060058054905f61044783610b82565b9190505550600160075f86868681811061046357610463610b6e565b90506020020160208101906104789190610b14565b6001600160a01b0316815260208101919091526040015f20805460ff19169115159190911790558383838181106104b1576104b1610b6e565b90506020020160208101906104c69190610b14565b6001600160a01b03167ff025e0c58bf784c030caa814abce9ca7cf237831d4dff71c2ade33bed4d8dd228260405161050091815260200190565b60405180910390a2508061051381610b82565b915050610387565b505050565b60035434146105715760405162461bcd60e51b815260206004820152601860248201527f496e636f7272656374207061796d656e7420616d6f756e740000000000000000604482015260640161031d565b600454600554106105b85760405162461bcd60e51b8152602060048201526011602482015270105b1b081391951cc81cdbdb19081bdd5d607a1b604482015260640161031d565b335f9081526007602052604090205460ff161561060b5760405162461bcd60e51b8152602060048201526011602482015270105b1c9958591e481c1d5c98da185cd959607a1b604482015260640161031d565b60045460065411156106585760405162461bcd60e51b81526020600482015260166024820152754e6f206d6f7265204e46547320617661696c61626c6560501b604482015260640161031d565b600680549081905f61066983610b82565b909155505060058054905f61067d83610b82565b9091555050335f81815260076020908152604091829020805460ff19166001179055815192835234908301527f6ef95f06320e7a25a04a175ca677b7052bdd97131872c2192525a629f51be770910160405180910390a16001546040516001600160a01b03909116903480156108fc02915f818181858888f1935050505015801561070a573d5f803e3d5ffd5b50600154604080516001600160a01b0390921682523460208301527f7e99594d80a854f08e1995929bca50d03000411d5987bfea7071cc8d125762c4910160405180910390a160405181815233907ff025e0c58bf784c030caa814abce9ca7cf237831d4dff71c2ade33bed4d8dd229060200160405180910390a261078d610a52565b50565b6001600160a01b0381165f9081526007602052604081205460065460055460045484938493849360ff9092169290916107c891610b9a565b60035493509350935093509193509193565b5f546001600160a01b0316331461082a5760405162461bcd60e51b815260206004820152601460248201527313db9b1e481bdddb995c8818d85b881c995cd95d60621b604482015260640161031d565b5f60055560016006556402540be40060035560405142815233907f52792a7f5b0a52571949f1e7fb3a5a1672bd8a877707942a21cb3300fa02d1019060200160405180910390a2565b5f546001600160a01b031633146108cc5760405162461bcd60e51b815260206004820152601d60248201527f4f6e6c79206f776e65722063616e20676976652061776179204e465473000000604482015260640161031d565b600454600554106109135760405162461bcd60e51b8152602060048201526011602482015270105b1b081391951cc81cdbdb19081bdd5d607a1b604482015260640161031d565b60045460065411156109605760405162461bcd60e51b81526020600482015260166024820152754e6f206d6f7265204e46547320617661696c61626c6560501b604482015260640161031d565b6001600160a01b0381165f9081526007602052604090205460ff16156109c85760405162461bcd60e51b815260206004820152601f60248201527f4164647265737320616c726561647920726563656976656420616e204e465400604482015260640161031d565b600680549081905f6109d983610b82565b909155505060058054905f6109ed83610b82565b90915550506001600160a01b0382165f8181526007602052604090819020805460ff19166001179055517ff025e0c58bf784c030caa814abce9ca7cf237831d4dff71c2ade33bed4d8dd2290610a469084815260200190565b60405180910390a25050565b600354610a63633b9aca0082610b55565b60038190556040805183815260208101929092527f945c1c4e99aa89f648fbfe3df471b916f719e16d960fcec0737d4d56bd696838910160405180910390a150565b5f8060208385031215610ab6575f80fd5b823567ffffffffffffffff80821115610acd575f80fd5b818501915085601f830112610ae0575f80fd5b813581811115610aee575f80fd5b8660208260051b8501011115610b02575f80fd5b60209290920196919550909350505050565b5f60208284031215610b24575f80fd5b81356001600160a01b0381168114610b3a575f80fd5b9392505050565b634e487b7160e01b5f52601160045260245ffd5b80820180821115610b6857610b68610b41565b92915050565b634e487b7160e01b5f52603260045260245ffd5b5f60018201610b9357610b93610b41565b5060010190565b81810381811115610b6857610b68610b4156fea2646970667358221220fa56585a0e204f6f5a9c6c9e75eabde23b7da9dba315fcc7e9fd8342480d9c1d64736f6c63430008140033";

type NFTSaleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTSaleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTSale__factory extends ContractFactory {
  constructor(...args: NFTSaleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _tokenAddress: AddressLike,
    _treasury: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _tokenAddress,
      _treasury,
      overrides || {}
    );
  }
  override deploy(
    _tokenAddress: AddressLike,
    _treasury: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_tokenAddress, _treasury, overrides || {}) as Promise<
      NFTSale & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NFTSale__factory {
    return super.connect(runner) as NFTSale__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTSaleInterface {
    return new Interface(_abi) as NFTSaleInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): NFTSale {
    return new Contract(address, _abi, runner) as unknown as NFTSale;
  }
}
