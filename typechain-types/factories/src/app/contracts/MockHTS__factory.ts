/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  MockHTS,
  MockHTSInterface,
} from "../../../../src/app/contracts/MockHTS";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "int64",
        name: "",
        type: "int64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "associateToken",
    outputs: [
      {
        internalType: "int64",
        name: "",
        type: "int64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "int64",
        name: "",
        type: "int64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "isTokenAssociated",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "int64",
        name: "amount",
        type: "int64",
      },
    ],
    name: "setAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "int64",
        name: "balance",
        type: "int64",
      },
    ],
    name: "setBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "associated",
        type: "bool",
      },
    ],
    name: "setTokenAssociated",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "int64",
        name: "amount",
        type: "int64",
      },
    ],
    name: "transferToken",
    outputs: [
      {
        internalType: "int64",
        name: "",
        type: "int64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b506105e18061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610085575f3560e01c8063a7796a9011610058578063a7796a90146101a4578063b3b549d9146101e9578063eca3691714610240578063f7888aec14610253575f80fd5b80633ff2e11a1461008957806349146bde146100eb578063725fe8a414610116578063927da1051461015f575b5f80fd5b6100e96100973660046103f8565b6001600160a01b039384165f90815260026020908152604080832095871683529481528482209390951681529190935220805467ffffffffffffffff191667ffffffffffffffff909216919091179055565b005b6100fe6100f9366004610449565b61028e565b60405160079190910b81526020015b60405180910390f35b61014f610124366004610449565b6001600160a01b039182165f9081526020818152604080832093909416825291909152205460ff1690565b604051901515815260200161010d565b6100fe61016d36600461047a565b6001600160a01b039283165f9081526002602090815260408083209486168352938152838220929094168152925290205460070b90565b6100e96101b23660046104ba565b6001600160a01b039283165f9081526020818152604080832094909516825292909252919020805460ff1916911515919091179055565b6100e96101f7366004610502565b6001600160a01b039283165f90815260016020908152604080832094909516825292909252919020805467ffffffffffffffff191667ffffffffffffffff909216919091179055565b6100fe61024e3660046103f8565b6102c4565b6100fe610261366004610449565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205460070b90565b6001600160a01b038083165f908152602081815260408083209385168352929052908120805460ff191660011790555b92915050565b6001600160a01b038085165f908152600160209081526040808320938716835292905290812054600783810b91900b1215610301575060016103c4565b6001600160a01b038086165f9081526001602090815260408083209388168352929052908120805484929061033a90849060070b61054d565b825467ffffffffffffffff9182166101009390930a9283029190920219909116179055506001600160a01b038086165f9081526001602090815260408083209387168352929052908120805484929061039790849060070b61057c565b92506101000a81548167ffffffffffffffff021916908360070b67ffffffffffffffff1602179055505f90505b949350505050565b80356001600160a01b03811681146103e2575f80fd5b919050565b8035600781900b81146103e2575f80fd5b5f805f806080858703121561040b575f80fd5b610414856103cc565b9350610422602086016103cc565b9250610430604086016103cc565b915061043e606086016103e7565b905092959194509250565b5f806040838503121561045a575f80fd5b610463836103cc565b9150610471602084016103cc565b90509250929050565b5f805f6060848603121561048c575f80fd5b610495846103cc565b92506104a3602085016103cc565b91506104b1604085016103cc565b90509250925092565b5f805f606084860312156104cc575f80fd5b6104d5846103cc565b92506104e3602085016103cc565b9150604084013580151581146104f7575f80fd5b809150509250925092565b5f805f60608486031215610514575f80fd5b61051d846103cc565b925061052b602085016103cc565b91506104b1604085016103e7565b634e487b7160e01b5f52601160045260245ffd5b600782810b9082900b03677fffffffffffffff198112677fffffffffffffff821317156102be576102be610539565b600781810b9083900b01677fffffffffffffff8113677fffffffffffffff19821217156102be576102be61053956fea26469706673582212203f0cd23a9990da5c1274b7a0898da9d3c226b0bf8bc756be5675c5bd60c1eab864736f6c63430008140033";

type MockHTSConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockHTSConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockHTS__factory extends ContractFactory {
  constructor(...args: MockHTSConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockHTS & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockHTS__factory {
    return super.connect(runner) as MockHTS__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockHTSInterface {
    return new Interface(_abi) as MockHTSInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockHTS {
    return new Contract(address, _abi, runner) as unknown as MockHTS;
  }
}
